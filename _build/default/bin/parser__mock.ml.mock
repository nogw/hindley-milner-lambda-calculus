
type token = 
  | VAR of (
# 5 "bin/parser.mly"
       (string)
# 7 "bin/parser__mock.ml.mock"
)
  | RPARENS
  | LPARENS
  | LAMBDA
  | INT of (
# 6 "bin/parser.mly"
       (int)
# 15 "bin/parser__mock.ml.mock"
)
  | EOF
  | ARROW

# 1 "bin/parser.mly"
  
  open Tree

# 24 "bin/parser__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_term_opt, xv_nonempty_list_VAR_, xv_expr_var, xv_expr_parens, xv_expr_lambda, xv_expr_int, xv_expr_atom, xv_expr_apply, xv_expr) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 219 "<standard.mly>"
         xs
# 33 "bin/parser__mock.ml.mock"
   : 'tv_nonempty_list_VAR_) (_startpos_xs_ : Lexing.position) (_endpos_xs_ : Lexing.position) (_startofs_xs_ : int) (_endofs_xs_ : int) (_loc_xs_ : Lexing.position * Lexing.position) (
# 219 "<standard.mly>"
  x
# 37 "bin/parser__mock.ml.mock"
   : (
# 5 "bin/parser.mly"
       (string)
# 41 "bin/parser__mock.ml.mock"
  )) (_startpos_x_ : Lexing.position) (_endpos_x_ : Lexing.position) (_startofs_x_ : int) (_endofs_x_ : int) (_loc_x_ : Lexing.position * Lexing.position) ->
    (
# 220 "<standard.mly>"
    ( x :: xs )
# 46 "bin/parser__mock.ml.mock"
     : 'tv_nonempty_list_VAR_) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 217 "<standard.mly>"
  x
# 51 "bin/parser__mock.ml.mock"
   : (
# 5 "bin/parser.mly"
       (string)
# 55 "bin/parser__mock.ml.mock"
  )) (_startpos_x_ : Lexing.position) (_endpos_x_ : Lexing.position) (_startofs_x_ : int) (_endofs_x_ : int) (_loc_x_ : Lexing.position * Lexing.position) ->
    (
# 218 "<standard.mly>"
    ( [ x ] )
# 60 "bin/parser__mock.ml.mock"
     : 'tv_nonempty_list_VAR_) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 29 "bin/parser.mly"
    _1
# 65 "bin/parser__mock.ml.mock"
   : 'tv_expr_parens) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr_atom) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 28 "bin/parser.mly"
    _1
# 71 "bin/parser__mock.ml.mock"
   : 'tv_expr_var) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr_atom) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 27 "bin/parser.mly"
    _1
# 77 "bin/parser__mock.ml.mock"
   : 'tv_expr_int) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr_atom) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 24 "bin/parser.mly"
    _1
# 83 "bin/parser__mock.ml.mock"
   : 'tv_expr_lambda) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 23 "bin/parser.mly"
    _1
# 89 "bin/parser__mock.ml.mock"
   : 'tv_expr_apply) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 22 "bin/parser.mly"
    _1
# 95 "bin/parser__mock.ml.mock"
   : 'tv_expr_atom) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (_1 : 'tv_expr) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (_2 : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 19 "bin/parser.mly"
    expr
# 101 "bin/parser__mock.ml.mock"
   : 'tv_expr) (_startpos_expr_ : Lexing.position) (_endpos_expr_ : Lexing.position) (_startofs_expr_ : int) (_endofs_expr_ : int) (_loc_expr_ : Lexing.position * Lexing.position) ->
    ((
# 19 "bin/parser.mly"
                      ( Some expr )
# 106 "bin/parser__mock.ml.mock"
     : 'tv_term_opt) : (
# 13 "bin/parser.mly"
       (Tree.expr option)
# 110 "bin/parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (_1 : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    ((
# 18 "bin/parser.mly"
         ( None )
# 116 "bin/parser__mock.ml.mock"
     : 'tv_term_opt) : (
# 13 "bin/parser.mly"
       (Tree.expr option)
# 120 "bin/parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 32 "bin/parser.mly"
    var
# 125 "bin/parser__mock.ml.mock"
   : (
# 5 "bin/parser.mly"
       (string)
# 129 "bin/parser__mock.ml.mock"
  )) (_startpos_var_ : Lexing.position) (_endpos_var_ : Lexing.position) (_startofs_var_ : int) (_endofs_var_ : int) (_loc_var_ : Lexing.position * Lexing.position) ->
    (
# 32 "bin/parser.mly"
               ( Var var )
# 134 "bin/parser__mock.ml.mock"
     : 'tv_expr_var) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (_3 : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 46 "bin/parser.mly"
             expr
# 139 "bin/parser__mock.ml.mock"
   : 'tv_expr) (_startpos_expr_ : Lexing.position) (_endpos_expr_ : Lexing.position) (_startofs_expr_ : int) (_endofs_expr_ : int) (_loc_expr_ : Lexing.position * Lexing.position) (_1 : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 46 "bin/parser.mly"
                                   ( expr )
# 144 "bin/parser__mock.ml.mock"
     : 'tv_expr_parens) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 38 "bin/parser.mly"
                                                body
# 149 "bin/parser__mock.ml.mock"
   : 'tv_expr) (_startpos_body_ : Lexing.position) (_endpos_body_ : Lexing.position) (_startofs_body_ : int) (_endofs_body_ : int) (_loc_body_ : Lexing.position * Lexing.position) (_3 : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 38 "bin/parser.mly"
            params
# 153 "bin/parser__mock.ml.mock"
   : 'tv_nonempty_list_VAR_) (_startpos_params_ : Lexing.position) (_endpos_params_ : Lexing.position) (_startofs_params_ : int) (_endofs_params_ : int) (_loc_params_ : Lexing.position * Lexing.position) (_1 : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 39 "bin/parser.mly"
    ( List.fold_right (fun param body -> Abs (param, body) ) params body )
# 158 "bin/parser__mock.ml.mock"
     : 'tv_expr_lambda) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 35 "bin/parser.mly"
    num
# 163 "bin/parser__mock.ml.mock"
   : (
# 6 "bin/parser.mly"
       (int)
# 167 "bin/parser__mock.ml.mock"
  )) (_startpos_num_ : Lexing.position) (_endpos_num_ : Lexing.position) (_startofs_num_ : int) (_endofs_num_ : int) (_loc_num_ : Lexing.position * Lexing.position) ->
    (
# 35 "bin/parser.mly"
               ( Int num )
# 172 "bin/parser__mock.ml.mock"
     : 'tv_expr_int) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 43 "bin/parser.mly"
                         arg
# 177 "bin/parser__mock.ml.mock"
   : 'tv_expr_atom) (_startpos_arg_ : Lexing.position) (_endpos_arg_ : Lexing.position) (_startofs_arg_ : int) (_endofs_arg_ : int) (_loc_arg_ : Lexing.position * Lexing.position) (
# 43 "bin/parser.mly"
    lambda
# 181 "bin/parser__mock.ml.mock"
   : 'tv_expr_apply) (_startpos_lambda_ : Lexing.position) (_endpos_lambda_ : Lexing.position) (_startofs_lambda_ : int) (_endofs_lambda_ : int) (_loc_lambda_ : Lexing.position * Lexing.position) ->
    (
# 43 "bin/parser.mly"
                                          ( App (lambda, arg) )
# 186 "bin/parser__mock.ml.mock"
     : 'tv_expr_apply) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 42 "bin/parser.mly"
                         arg
# 191 "bin/parser__mock.ml.mock"
   : 'tv_expr_atom) (_startpos_arg_ : Lexing.position) (_endpos_arg_ : Lexing.position) (_startofs_arg_ : int) (_endofs_arg_ : int) (_loc_arg_ : Lexing.position * Lexing.position) (
# 42 "bin/parser.mly"
    lambda
# 195 "bin/parser__mock.ml.mock"
   : 'tv_expr_atom) (_startpos_lambda_ : Lexing.position) (_endpos_lambda_ : Lexing.position) (_startofs_lambda_ : int) (_endofs_lambda_ : int) (_loc_lambda_ : Lexing.position * Lexing.position) ->
    (
# 42 "bin/parser.mly"
                                          ( App (lambda, arg) )
# 200 "bin/parser__mock.ml.mock"
     : 'tv_expr_apply) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_term_opt * 'tv_nonempty_list_VAR_ * 'tv_expr_var * 'tv_expr_parens * 'tv_expr_lambda * 'tv_expr_int * 'tv_expr_atom * 'tv_expr_apply * 'tv_expr)

and menhir_end_marker =
  0
